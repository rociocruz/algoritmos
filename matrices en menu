Menu matrices 1



#include <stdio.h>
#include <iostream>
#include <string.h>
#include <conio.h>
#include <iomanip>
#include <math.h>
#define N 10
#define M 10

using namespace std;


void cargar(int mat[M][N],int n, int m)
{
	int i,j;
    for( i=0;i<n;i++)
    {
        for(j=0;j<m;j++)
        {
        
                cin>>mat[i][j];
         }
	}
}



void mostrar(int mat[N][M],int n, int m)
{
	int i,j;
    for( i=0;i<n;i++)
    {
        for(j=0;j<m;j++)
        {
            cout<<setw(3)<<mat[i][j]<<" ";
        }
        cout<<endl;
    }
}

void transpuesta(int mat[N][M],int n, int m)
{
	int i,j;
    for( i=0;i<n;i++)
    {
        for(j=0;j<m;j++)
        {
            cout<<setw(3)<<mat[j][i]<<" ";
        }
        cout<<endl;
    }
}
void sumar(int mat[N][M], int mat2[N][M], int R[N][M], int n,int m, int n2,int m2)
{
	int i,j;
	 for( i=0;i<n;i++)
    {
        for(j=0;j<m;j++)
        {
	R[i][j]= mat[i][j]+mat2[i][j] ;
		}
	 }
}


void mostrarr(int m[N][N], int tam)
{
    for (int i=0; i<tam; i++) {
        for (int j=0; j<tam; j++) {
            if (!j)
               printf("%3d", m[i][j]);
            else
                printf(" %3d", m[i][j]);
                 
        }
        cout << endl;
    }
}
void cargarespiral(int mat[N][N],int n)
{
    int i=0,aux=1,c=0;
    while(c<=(n/2))
    {
        for(i=c;i<n-c-1;i++)
        {
            mat[c][i]=aux;
            aux++;
        }
        for(i=c;i<n-c-1;i++)
        {
            mat[i][n-c-1]=aux;
            aux++;
        }
        for(i=n-c-1;i>=c+1;i--)
        {
            mat[n-c-1][i]=aux;
            aux++;
        }
        for(i=n-c-1;i>c;i--)
        {
            mat[i][c]=aux;
            aux++;
        }
        c++;
    }
    if(n%2!=0)
        mat[n/2][n/2]=aux-1;
}


void cargardiagonal(int A[N][M], int n, int c)
{int i,j,k,l,p=c;
 i=0;
 j=0;
 while(i<n)
 {A[i][j]=p;
  p++;
  if(i!=j)
  { k=i;
    l=j;
	do
   {k=k-1;
    l=l+1;
	A[k][l]=p;
	p++;
   }while(k!=0);
  }
  i++;
 }
 if(n>1)
 {i=n-1;
  j=1;
  while(j<n)
  {A[i][j]=p;
   p++;
   if(i!=j)
   {k=i;
    l=j;
	do
	{k=k-1;
	 l=l+1;
	 A[k][l]=p;
	 p++;
	}while(l!=(n-1));
   }
   j++;
  }
 }
}



int main ()
{int opcion,n,m, matriz[N][M],nn,mm,matriz2[N][M], matriz3[N][M];

    do
    {cout << endl << endl << "**************** MENU MATRICES ****************";
        cout << endl <<"=================================================";
        cout << endl <<"1.- Matriz transpuesta";
        cout << endl <<"2.- matrizinversa";
        cout << endl <<"3.- Suma de 2 matrices";
        cout << endl <<"4.- multiplicacion de 2 matrices";
		cout << endl <<"5.-verificar si una matriz es magica";
		cout << endl <<"6.-matriz circular";
        cout << endl <<"7.-cargar matriz diagonal";
	     cout << endl <<"0.- Salir";
        cout << endl;
        cout << endl <<"Seleccionar opcion: ";
        cin >> opcion;
        switch (opcion)
			{case 1: cout << endl;


					 cout << "Ingrese el numero de filas de la matriz /n";
					 cin >> n;
					 cout << "Ingrese el numero de columnas de la matriz /n";
					 cin>>m;
					  cargar(matriz,n,m);
					 transpuesta(matriz,n,m);
					 break;
             case 2: 
					 cout << "Ingrese el numero de filas de la matriz /n";
					 cin >> n;
					 cout << "Ingrese el numero de columnas de la matriz /n";
					 cin>>m;
					 break;
            case 3: cout << endl;
                cout << "Ingrese el numero de filas de la matriz /n";
					 cin >> n;
					 cout << "Ingrese el numero de columnas de la matriz /n";
					 cin>>m;
					 cargar(matriz,n,m);
					 cout << "Ingrese el numero de filas de la matriz2  ";
					 cin >> nn;
					 cout << "Ingrese el numero de columnas de la matriz 2 ";
					 cin>>mm;
					 cargar(matriz2,nn,mm);
					 mostrar(matriz,n,m);
					 cout<< endl;
					 cout<<"                        +"<< endl;
					 cout<< endl;
					 mostrar(matriz2,nn,mm);
					 cout<<"-----------------------";
					 cout<< endl;
					 sumar(matriz,matriz2,matriz3,n,m,nn,mm);
					 mostrar(matriz3,n,m);
                break;
            case 4: cout << endl;
                 int A[20][20], B[20][20], C[20][20];
                 int k, m, n1;

    cout<<"Lectura de matriz A."<<endl;
    cout<<"Filas de A: "; cin>>k;
    cout<<"Columnas de A: "; cin>>m;
    cout<<endl;
    for(int i=0; i<k; ++i)
        for(int j=0; j<m; ++j)
        {
            cout<<"Ingrese valor para A["<<i<<"]["<<j<<"]: ";
            cin>>A[i][j];
        }

    cout<<"Lectura de matriz B."<<endl;
    cout<<"Filas de B: "<<m<<" (ya esta definido y es necesario)."<<endl;
    cout<<"Columnas de B: "; cin>>n1;
    cout<<endl;
    for(int i=0; i<m; ++i)
        for(int j=0; j<n1; ++j)
        {
            cout<<"Ingrese valor para B["<<i<<"]["<<j<<"]: ";
            cin>>B[i][j];
        }

    
    for(int i=0; i<k; ++i)
        for(int j=0; j<n1; ++j)
            C[i][j] = 0;

    
    for(int i=0; i<k; ++i)
        for(int j=0; j<n; ++j)
            for(int z=0; z<m; ++z)
                C[i][j] += A[i][z] * B[z][j];

    cout<<"Matriz A: "<< endl;
    for(int i=0; i<k; ++i)
    {
        for(int j=0; j<m; ++j)
        {
            cout<<A[i][j]<<" ";
        }
        cout<<endl;
    }

    cout<<"Matriz B: "<< endl;
    for(int i=0; i<m; ++i)
    {
        for(int j=0; j<n; ++j)
        {
            cout<<B[i][j]<<" ";
        }
        cout<<endl;
    }

    cout<<"Matriz C: "<< endl;
    for(int i=0; i<k; ++i)
    {
        for(int j=0; j<n1; ++j)
        {
            cout<<C[i][j]<<" ";
        }
        cout<<endl;
    }

                break;

				case 5: cout << endl;

int matt[4][4];
  int i,j,aux,suma,cont;
   cout<<" \n \n \t \t \t \tmatriz magica \n \n";
    cout<<"\t \t Valores de 1 al 9 ( los numeros no se deben repitir)\n \n\n";
      cout<<"\n \t \t \t \tINGRESE LA MATRIZ \n\n";
   


  for (i=1;i<=3;i++)
  {
   for (j=1;j<=3;j++)
   {
      do
      { cout<<" \t \t \t \tValor "<<"("<<i;
  cout<<" "<<j<<") ";
 cin>>aux;
       }
       while(aux<1 || aux>9) ;
 matt[i][j]=aux;
        
   }
  }
 // Imprime la  matriz
for (i=1;i<=3;i++)
 {
  cout<<"\n \t \t \t \t";
   for (j=1;j<=3;j++)
   {


       cout<<matt[i][j];
       cout<<"\t";
   }
   }
 cont=0; aux=0;
      //sumando filas
      for (i=1;i<=3;i++)
  { suma=0;
    for (j=1;j<=3;j++)
    {
     suma+=matt[i][j];
    }
    if(i==1)
    { aux=suma;
    }
    if(aux==suma)
     {
       cont++;
     }
  }


  //Suma las columnas


  for (i=1;i<=3;i++)
  { suma=0;
    for (j=1;j<=3;j++)
    {
     suma+=matt[j][i];
    }
   if(aux==suma)
     {
       cont++;
     }
  }


  //Suma las diagonales


   suma=0;
     suma+=matt[1][1];
     suma+=matt[2][2];
     suma+=matt[3][3];
    if(aux==suma)
     { cont++;
     }
   suma=0;
     suma+=matt[1][3];
     suma+=matt[2][2];
     suma+=matt[3][1];


    if(aux==suma)
     {
       cont++;
     }
 if (cont==8)
 {
  cout<<"\n\n \t \t \t \t Es matriz magica";
 }
 else
 { cout<<"\n \n\t \t \t \t No es matriz magica";
 }

					 
					 break;



					 case 6:

						 int tam;
						 cout<< "ingresar tamanho de la matriz   ";
						 cin>>tam;
						cargarespiral(matriz,tam);
						mostrarr(matriz,tam);

						break;

						
					 case 7:

						 int tamm, mmm;
						 cout<< "ingresar tamanho de la matriz   ";
						 cin>> tamm;
						 cin>>mmm;
						cargardiagonal(matriz,tamm,mmm);
						mostrar(matriz,tamm,mmm);

						break;

		

        }
    }while(opcion!=0);
    return (1);
}


























