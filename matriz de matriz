#include <iostream>
#include <conio.h>
using namespace std;
#define F 10
#define C 10

struct matriz{
	int v[F];
};

void cargarMatriz(matriz mat[F][C],int n){
	int i,j,k;
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			for(k=0;k<n;k++){
				cout<<"introducir elemento: ";
				cin>>mat[i][j].v[k];
			}
		}
	}
}


void mostrarMatriz(matriz mat[F][C],int n){
	int i,j,k;
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			for(k=0;k<n;k++){
				cout<<mat[i][j].v[k]<<" ";
			}
		}cout<<endl;
	}
}

bool verifPrimo(int n)
 {int i,a=0;
 bool k;
 for(i=2;i<n;i++){  
	if(n%i==0){  
		a++;}  
	}  
	if(a!=0){  
        k=false;
    }else{  
        k=true;}
return(k);}

void ordVec(int v[],int n){
	int i,j,aux;
	for(i=0;i<n;i++){
		for(j=i;j<n;j++){
			if(v[i]>v[j]){
				aux=v[i];
				v[i]=v[j];
				v[j]=aux;}
		}
	}
}

void ordenarPrim(matriz mat[F][C],int n){
	int i,j,k;
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			for(k=0;k<n;k++){
				if(verifPrimo(mat[i][j].v[k])==true)
					ordVec(mat[i][j].v,n);}
		}
	}
}

void main(){
	matriz m[F][C];
	int n;
	cout<<"introducir el numero de filas y columnas: ";
	cin>>n;
	cargarMatriz(m,n);
	mostrarMatriz(m,n);
	ordenarPrim(m,n);
	mostrarMatriz(m,n);
	getch();}

